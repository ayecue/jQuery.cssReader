var cssReader=function(e){var t=this;var n={targetUrl:"",fetchedCss:"",classContainer:[],classRefContainer:[],classLastCompiled:[],attrContainer:[]};var r=$.extend(n,e);this.setUrl=function(e){r.targetUrl=e;};this.freeClassRef=function(){try{if(r.classRefContainer.length>0){delete r.classRefContainer;r.classRefContainer=[];}}catch(e){}};this.addClassRef=function(e,t){if(!(e in r.classRefContainer)){r.classRefContainer[e]=[];}r.classRefContainer[e].push(t);};this.getClassRef=function(e){return e in r.classRefContainer?r.classRefContainer[e]:false;};this.freeClass=function(){try{if(r.classContainer.length>0){delete r.classContainer;r.classContainer=[];}}catch(e){}};this.addClass=function(e,n,i,s){if(!(n in r.classContainer)){r.classContainer[n]=[{lastPriority:cssReader.getClassPriority(e,0),classString:e,classPath:i,attrIndex:typeof s=="number"?s:false}];}else{r.classContainer[n].push({lastPriority:cssReader.getClassPriority(e,r.classContainer[n].length),classString:e,classPath:i,attrIndex:typeof s=="number"?s:false});}t.addClassRef(e,n);};this.getCompleteClass=function(e){return e in r.classContainer?r.classContainer[e]:false;};this.getFirstClass=function(e){var n=t.getCompleteClass(e);return "0" in n?n[0]:false;};this.freeCompiledClass=function(){try{if(r.classLastCompiled.length>0){delete r.classLastCompiled;r.classLastCompiled=[];}}catch(e){}};this.getCompiledClass=function(e){if(!(e in r.classContainer)){return false;}if(!(e in r.classLastCompiled)){r.classLastCompiled[e]=[];$.each(r.classContainer[e],function(t,n){var i=r.attrContainer[n.attrIndex];for(attrKey in i){var s=cssReader.isAttrImportant(i[attrKey]);if(!(attrKey in r.classLastCompiled[e])){r.classLastCompiled[e][attrKey]={attrPrio:n.lastPriority,attrValue:i[attrKey],attrPath:n.classPath,attrClass:n.classString,attrImportant:s};}else{if(r.classLastCompiled[e][attrKey].attrImportant<s||r.classLastCompiled[e][attrKey].attrPrio<=n.lastPriority&&r.classLastCompiled[e][attrKey].attrImportant==s){r.classLastCompiled[e][attrKey]={attrPrio:n.lastPriority,attrValue:i[attrKey],attrPath:n.classPath,attrClass:n.classString,attrImportant:s};}}}});return r.classLastCompiled[e];}else{return r.classLastCompiled[e];}};this.get=function(){if(r.targetUrl){return $.ajax({url:r.targetUrl,success:function(e){r.fetchedCss=cssReader.getCompressedCss(e).match(/([#.\w\s:,>\-_*"=\[\]]+){(?:[^}]*)}/gi);}});}};this.read=function(e){var n=e?e:r.fetchedCss;if(n.length>0){return $.each(n,function(e,n){var i=n.replace(/{([^}]*)}/gi,"").match(/(?:[#.\w\s:,>\-_*"=\[\]]+)/gi);var s=n.match(/[^}{*\/]+:[^}{]*[^*\/]*?;?/gi,"");var o=0;if(s[0].length>0){r.attrContainer[e]=[];$.each(s[0].split(";"),function(t,n){try{if(n.length>0){var i=n.split(":");var s=cssReader.getTrimStr(i[0]);var u=cssReader.getTrimStr(i[1]);if(s.length>0&&u.length>0){r.attrContainer[e][s]=u;}}}catch(a){}o++;});if(o>0){$.each(i,function(n,r){if(/,/.test(r)){var i=r.split(",");}else{var i=[r];}$.each(i,function(n,r){try{if(r.length>0){var i=cssReader.getTrimStr(r);var s=cssReader.getClassPath($(i));if(typeof s==="string"){var o=cssReader.getClassHash(s);try{t.addClass(i,o,s,e);}catch(u){t.addClass(i,o.toString(),s,e);}}else{if(s===false){var o=cssReader.getClassHash(i);try{t.addClass(i,o,false,e);}catch(u){t.addClass(i,o,false,e);}}else{$.each(s,function(n,r){var s=cssReader.getClassHash(r);try{t.addClass(i,s,r,e);}catch(o){t.addClass(i,s.toString(),r,e);}});}}}}catch(u){}});});}}});}};this.readWithFilter=function(e){var n="";var i=e.length-1;$.each(e,function(e,t){n+=i!=e?t+"|":t;});var s=new RegExp("("+n+"):[^}{]*[^*/]*?;","gi");var o=[];$.each(r.fetchedCss,function(e,t){if(t.match(s)){o.push(t);}});return t.read(o);};this.searchFirst=function(e){for(classContainerIndex in r.classContainer){try{var n=t.getCompiledClass(classContainerIndex);if(e in n){return [n[e].attrClass,n[e].attrValue];}}catch(i){}}};this.searchWithCallback=function(e,n){for(classContainerIndex in r.classContainer){try{var i=t.getCompiledClass(classContainerIndex);if(e in i){n.call(t,classContainerIndex,i[e].attrValue);}}catch(s){}}};this.searchInactiveArray=function(e){var n=[];var r=0;t.searchWithCallback(e,function(i,s){var o=t.getCompiledClass(i);if(o[e].attrPath===false){n[o[e].attrClass]=s;r++;}});return r>0?n:false;};this.searchActiveArray=function(e){var n=[];var r=0;t.searchWithCallback(e,function(i,s){var o=t.getCompiledClass(i);if(o[e].attrPath!==false){n[o[e].attrClass]=s;r++;}});return r>0?n:false;};this.searchArray=function(e){var n=[];var r=0;t.searchWithCallback(e,function(i,s){var o=t.getCompiledClass(i);n[o[e].attrClass]=s;r++;});return r>0?n:false;};this.scrape=function(e){$.when(t.get()).done(function(){$.when(t.read()).done(function(){if(e){e.call(t,r);}});});};this.scrapeWithFilter=function(e,n){$.when(t.get()).done(function(){$.when(t.readWithFilter(n)).done(function(){if(e){e.call(t,r);}});});};t.setUrl(r.targetUrl);};cssReader.getTrimStr=function(e){return e.replace(/^\s+|\s+$/g,"");};cssReader.getCompressedCss=function(e){return e.replace(/\/\*[\s\S]+?\*\//g,"").replace(/[^\S][\s\n\r]*[^\S]/g,"");};cssReader.getClassHash=function(e){if(e.lenght==0){return false;}var t=0;$.each(e,function(n){t=(t<<5)-t+e.charCodeAt(n);t=t&t;});return t;};cssReader.getClassPath=function(e){var t=$(e);if(!t[0]){return false;}var n=[];t.each(function(){var e="";var t=$(this);t.parents("*").each(function(){var t=$(this);var n=(className=t.attr("class"))?"."+className.replace(/\s/gi,"."):"";var r=(idName=t.attr("id"))?"#"+idName.replace(/\s/gi,"#"):"";e=t[0].tagName.toLowerCase()+r+n+" "+e;});n.push(e.replace(/\s/gi," > ")+t[0].tagName.toLowerCase()+((className=t.attr("class"))?"."+className.replace(/\s/gi,"."):"")+((idName=t.attr("id"))?"#"+idName.replace(/\s/gi,"#"):""));});return n.length>0?n:false;};cssReader.getClassPriority=function(e,t){var n=0;var r=e.split(" ");for(parentParts in r){if(/[#.][\w:\-_"=\[\]]+/.test(r[parentParts])){try{n+=(id=r[parentParts].match(/#[\w:\-_"=\[\]]+/gi))?id.length*100:0;n+=(cl=r[parentParts].match(/\.[\w:\-_"=\[\]]+/gi))?cl.length*10:0;n+=(tg=r[parentParts].match(/\w+[#.]/gi))?tg.length*1:0;}catch(i){n+=(id=r[parentParts].toString().match(/#[\w:\-_"=\[\]]+/gi))?id.length*100:0;n+=(cl=r[parentParts].toString().match(/\.[\w:\-_"=\[\]]+/gi))?cl.length*10:0;n+=(tg=r[parentParts].toString().match(/\w+[#.]/gi))?tg.length*1:0;}}else{if(/[^>]+/.test(r[parentParts])){n++;}}}return n+(t?t:0);};cssReader.isAttrImportant=function(e){return /!important$/.test(e);};